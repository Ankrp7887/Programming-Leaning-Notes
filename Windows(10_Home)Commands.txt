cd C:\Users\ap788\Downloads
cd D:\Anynomus\Documents\Programming\Python

cls 	clears cmd screen	

**Softwares--
HWiNFO64		>gives all syste/sensors details for hardware components



**File Related
	cd -							>change directory to specified path after keyword
	dir -							>list out the all files in current working directory

**C\C++ 
	After installing Msys2
	Msys2 64 bit -> type command "pacman -Syu"		>update all packages of msys2
	Msys2 -> type "pacman -Su"				>update all base packages
	Msys2/Mingw64 -> type "pacman -Ss gcc"			>checking all available gcc/gdb(debugger) packages list for installation
	Msys2/Mingw64 -> type "pacman -S choosen_package_name"		   


**Check Python version
	python --version
	
**PIP:
	pip --version
	python -m pip install --upgrade pip			-->updates pip installer
	pip list
	pip freeze
	pip freeze > req.txt
	pip install -r req.txt 
	pip freeze pip uninstall -r requirements.txt -y
	pip install numpy
	pip install selenium==4.0.0
	pip freez
	pip install --upgrade numpy
	pip uninstall numpy
			pip --help
			pip <command> --help
			pip install --help
**To get py->exe
	pyinstaller --onefile .\app.py 						-->Uses pyinstaller package & for working dir file
**Git:
	Local Working Dir	    Modified	  Staging Area	      Origin
	git add.|-------------------------------------->|		|
		|git restrore --staged filename|<--------------|If file is mod-|
		|			|		| -ified locally|
		|		git add.|-------------->|		|
		|			|     git commit|-------------->|
	git commit -a -m "Direct commit"|------------------------------>|			
		|			|git push origin|-------------->|
		|<------------------------------------------------------|git pull origin
		
	>Checking Version
		git --version
		git config --global user.name "Anynomus"
		git config --global user.email "Ankit7887@git.com"
		git remote add origin <SSH Key>							-->Connects Git repo to local path
		git status										-->Check working directory status
		git diff file_name								-->to check-out the updations before adding to staging area
		git diff									-->cheks diiference in working dir and staging area
		git diff --staged								-->cheks last commit with staging area
	>git branch master
		git branch									-->gives list of all branches creaed, with current working branch highlighted.
		git branch new_branch_name							-->creates new branch 'new_branch_name'
		git checkout new_branch_name							-->switches current working branch to 'new_branch_name'
		git merge new_branch_name							-->merge all changes commited on 'new_branch_name' to working branch
		git branch -d new_branch_name							-->deletes branch 'new_branch_name' locally
		git push origin --delete new_branch_name					-->deletes branch 'new_branch_name' remotely
	> git diff file.txt
		git diff --staged file_name							-->to check-out the updations of files in staging area
	> git diff --staged file.txt
		git init									-->Initialise empty Git repository in working directory
		git add .									-->add all to the staging area			|
		git reset .									-->unstage all the files from staging area	|at,<.> we can use <FileName>
		git restrore --staged filename							-->unstage the file 'filename' from staging area
		gir checkout .									-->undo all updated content of file, before staging
		git commit -m "CommitComments"							-->Commits to Git Repo
		git commit -a -m "Direct commit"						-->Commits to Git Repo directly 
		git rm file_name								-->Removes the file_name file and move the chages to staged area
		git rm --cached	file_name								-->Removes file from git repo and file becomes untracked for git
		rm -rf repo_folder/.git								-->Deletes local GitHub repository, use command at the root of your Git repository.
		git mv file_name file_name_renamed						-->Renames the file_name file to file_name_renamed and move the chages to staged area
	> git commit -m "fix to minor login bug"
		git log										-->Shows commits history
		git log -p									-->Shows commits history with changes.
		git log -p -3									-->Shows 3 commits history with changes.
		git log --since=2.days								-->Shows commits history of 2 last days with changes.
				1.weeks								-->Shows commits history of 1 last weeks with changes.
				2.months							-->Shows commits history of 2 last months with changes.
		git push origin master								-->Push to GitHub Repo from Git Repo
		git pull origin master								-->Pull from Github Repo to the Git & Local Repo
		git clone <SSH key>								-->Create/Download any public/private Repo
